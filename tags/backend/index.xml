<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BackEnd on Mario Blog</title><link>https://codemario318.github.io/tags/backend/</link><description>Recent content in BackEnd on Mario Blog</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Tue, 18 Apr 2023 14:04:15 +0900</lastBuildDate><atom:link href="https://codemario318.github.io/tags/backend/index.xml" rel="self" type="application/rss+xml"/><item><title>검색 엔진</title><link>https://codemario318.github.io/post/search_engine/</link><pubDate>Tue, 18 Apr 2023 14:04:15 +0900</pubDate><guid>https://codemario318.github.io/post/search_engine/</guid><description>&lt;img src="https://codemario318.github.io/post/search_engine/search_engine_cover.jpeg" alt="Featured image of post 검색 엔진" />&lt;p>&lt;img src="https://codemario318.github.io/post/search_engine/search_1.png"
width="1920"
height="1624"
srcset="https://codemario318.github.io/post/search_engine/search_1_hu403bad1118769606b062ea29b7dc1dc8_181102_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/search_engine/search_1_hu403bad1118769606b062ea29b7dc1dc8_181102_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="118"
data-flex-basis="283px"
>
검색 엔진은 컴퓨터 시스템에 저장된 정보를 찾아주는 것을 도와주도록 설계된 정보 검색 시스템이다. 검색 엔진을 사용하여정보를 찾는데 필요한 시간을 최소화할 수 있다.&lt;/p>
&lt;h2 id="웹-검색-엔진">웹 검색 엔진&lt;/h2>
&lt;p>웹 사이트를 검색하기 위한 프로그램이다.&lt;/p>
&lt;p>FTP 서버나 웹 사이트의 파일 검색 결과를 포함하며, 이미지나 토렌트 파일 또는 특정 부류의 웹 사이트에 특화된 웹 검색 엔진도 있다.&lt;/p>
&lt;p>서버에서는 &amp;lsquo;로봇&amp;rsquo;이라 불리는 특별한 프로그램을 이용하 웹 사이트들을 돌아다니며 웹 사이트들에 대한 정보를 미리 자동적으로 수집한다. 이휴 검색 엔진 사이트에서 특정 검색어를 입력하면 검색 엔진이 수집한 정보 중 그에 맞는 결과를 볼 수 있다.&lt;/p>
&lt;ul>
&lt;li>로봇이 참조와 어휘를 분헉하는 방식에 따라 검색 품질이 결정됨&lt;/li>
&lt;/ul>
&lt;h3 id="원리">원리&lt;/h3>
&lt;p>&lt;img src="https://codemario318.github.io/post/search_engine/search_2.png"
width="910"
height="212"
srcset="https://codemario318.github.io/post/search_engine/search_2_hubf6b83db01328e832aa8960bbb3db72a_146347_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/search_engine/search_2_hubf6b83db01328e832aa8960bbb3db72a_146347_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="429"
data-flex-basis="1030px"
>&lt;/p>
&lt;p>검색 엔진은 사용자가 검색 엔진을 사용하기 전에 미리 웹 상에서 정보를 수집하여 색인을 만들어 놓는다. 그리고 나서 사용자가 찾고자 하는 정보의 키워드를 입력하면, 미리 만들어 놓은 색인 중에서 입력된 키워드에 해당하는 정보들을 찾아서 보여준다.&lt;/p>
&lt;h3 id="문서-수집">문서 수집&lt;/h3>
&lt;p>현재 대부분의 검색 엔진에서는 엡상의 방대한 정보들을 검색하고 색인화 하는 과정을 크롤러라고 부르는 정보 수집 프로그램을 사용하여 수행하고 있다.&lt;/p>
&lt;p>크롤러가 주기적으로 웹에 접속된 사이트들을 방문하여 해당 웹 사이트가 가지고 있는 정보에 대해 색인을 작성한 후 그것을 데이터베이스에 저장하여 검색시 활용하게된다.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>크롤러&lt;/strong>&lt;br>
웹상의 문서나 이미지, 영상 등을 주기적으로 검색하고 취합하여, 자동으로 데이터베이스화 시키는 프로그램으로 봇(Bot)이라고도 부른다.&lt;/p>
&lt;/blockquote>
&lt;h2 id="검색-엔진의-종류">검색 엔진의 종류&lt;/h2>
&lt;p>수집한 정보를 색인하는 방법에 따라 구분된다.&lt;/p>
&lt;h3 id="로봇-검색-엔진">로봇 검색 엔진&lt;/h3>
&lt;p>크롤라라고 불리는 로봇을 이용하여 웹상의 데이터를 효율적으로 수집하고, 이렇게 수집한 데이터 키워드 색인을 통해 사용자에게 제공하는 검색 엔진&lt;/p>
&lt;ul>
&lt;li>Google, Naver등 현재 사용되는 대부분의 검색 엔진이 이 방식을 채택하고 있다.&lt;/li>
&lt;/ul>
&lt;h3 id="디렉토리-검색-엔진">디렉토리 검색 엔진&lt;/h3>
&lt;p>주제 분류에 의한 검색을 제공하는 검색 엔진이며, 데이터의 분류를 사람이 직접 슈행해야 한다.&lt;/p>
&lt;ul>
&lt;li>현재 주류인 방식은 아니며, 1990년대 Yahoo등에서 사용되었음&lt;/li>
&lt;/ul>
&lt;h3 id="메타-검색-엔진">메타 검색 엔진&lt;/h3>
&lt;p>자체적으로 정보를 보유하고 있지 않으면서 사용자가 입력한 키워드를 복수의 다른 검색 엔진으로 전송하여 결과를 얻고, 그 결과들을 종합하여 표시만 해주는 검색 엔진&lt;/p>
&lt;p>여러 검색 엔진의 결과를 동시에 보여주기 때문에 결과를 한눈에 살펴보기에는 편하지만, 메타 검색이라는 과정을 한 번 더 거쳐야 하므로 속도가 느를 수 있다.&lt;/p>
&lt;h2 id="검색-엔진-최적화search-engine-optimization-seo">검색 엔진 최적화(Search Engine Optimization, SEO)&lt;/h2>
&lt;p>검색 결과의 상위에 자신의 웹 페이지가 노출되기 위해 검색 엔진이 자료를 수집하고 결과를 산출하는 방식에 맞춰 웹 페이지의 구성을 조정하는 것을 의미한다.&lt;/p>
&lt;p>각각의 검색 엔진에 맞처 웹 페이지 내의 키워드나 링크 등을 최적화 하는 작업을 SEO라고 한다.&lt;/p></description></item><item><title>Web</title><link>https://codemario318.github.io/post/web/</link><pubDate>Mon, 17 Apr 2023 18:28:10 +0900</pubDate><guid>https://codemario318.github.io/post/web/</guid><description>&lt;img src="https://codemario318.github.io/post/web/web_cover.jpeg" alt="Featured image of post Web" />&lt;h2 id="웹-동작-방식">웹 동작 방식&lt;/h2>
&lt;p>&lt;img src="https://codemario318.github.io/post/web/web_1.png"
width="1480"
height="730"
srcset="https://codemario318.github.io/post/web/web_1_hu7f6c89e951b5c7c2fdb2549d3b17bd79_46991_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/web/web_1_hu7f6c89e951b5c7c2fdb2549d3b17bd79_46991_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="웹 동작 방식"
class="gallery-image"
data-flex-grow="202"
data-flex-basis="486px"
>&lt;/p>
&lt;p>클라이언트(브라우저)가 HTTP(URL)을 통해 요청을 보내면 HTML, CSS, 이미지와 같은 정적 콘텐츠를 응답으로 보내게 되고 그것을 받은 클라이언트가 해석하여 페이지로 보여준다.&lt;/p>
&lt;h2 id="static-pages와-dynamic-pages">Static pages와 Dynamic Pages&lt;/h2>
&lt;p>&lt;img src="https://codemario318.github.io/post/web/web_2.png"
width="3233"
height="1262"
srcset="https://codemario318.github.io/post/web/web_2_hu118d3ab45ddaa4b1e54aef5407b22c06_339090_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/web/web_2_hu118d3ab45ddaa4b1e54aef5407b22c06_339090_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Static and Dynamic"
class="gallery-image"
data-flex-grow="256"
data-flex-basis="614px"
>&lt;/p>
&lt;h3 id="static-pages">Static Pages&lt;/h3>
&lt;ul>
&lt;li>Web Server는 파일 경로의 이름을 받아 경로와 일치하는 file contents를 반환&lt;/li>
&lt;li>항상 동일한 페이지를 반환&lt;/li>
&lt;li>Ex) image, html, css, javascript 파일과 같이 컴퓨터에 저장되어 있는 파일들&lt;/li>
&lt;/ul>
&lt;h3 id="dynamic-pages">Dynamic Pages&lt;/h3>
&lt;ul>
&lt;li>인자의 내용에 맞게 동적인 Contents를 반환&lt;/li>
&lt;li>웹 서버에 의해서 실행되는 프로그램을 통해서 만들어진 결과물(WAS)위에서 돌아가는 프로그램&lt;/li>
&lt;/ul>
&lt;h2 id="web-server와-was의-차이">Web Server와 WAS의 차이&lt;/h2>
&lt;p>&lt;img src="https://codemario318.github.io/post/web/web_3.png"
width="1917"
height="607"
srcset="https://codemario318.github.io/post/web/web_3_hub574429a97bf680de242b6364e3018eb_132576_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/web/web_3_hub574429a97bf680de242b6364e3018eb_132576_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Web Server와 WAS"
class="gallery-image"
data-flex-grow="315"
data-flex-basis="757px"
>&lt;/p>
&lt;h3 id="web-server">Web Server&lt;/h3>
&lt;p>소프트웨어와 하드웨어로 구분된다.&lt;/p>
&lt;ul>
&lt;li>하드웨어
&lt;ul>
&lt;li>Web 서버가 설치되어 있는 컴퓨터&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>소프트웨어
&lt;ul>
&lt;li>웹 브라우저 클라이언트로 부터 HTTP 요청을 받아 &lt;strong>정적인 컨텐츠&lt;/strong>(.html, .jpeg, .css 등)을 제공하는 컴퓨터 프로그램&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="web-server의-역할">Web Server의 역할&lt;/h4>
&lt;blockquote>
&lt;p>HTTP 프로토콜을 기반으로 하여 클라이언트의 요청을 서비스 하는 기능 담당&lt;/p>
&lt;/blockquote>
&lt;p>요청에 따라 두 가지 기능 중 적절하게 선택하여 수행&lt;/p>
&lt;ol>
&lt;li>정적인 컨텐츠 제공
&lt;ul>
&lt;li>WAS를 거치지 않고 바로 자원을 제공한다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>동적인 컨텐츠 제공을 위한 요청 전달
&lt;ul>
&lt;li>클라이언트의 요청을 WAS에 보내고, WAS가 처리한 결과를 클라이언트에게 전달한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4 id="web-server의-예">Web Server의 예&lt;/h4>
&lt;ul>
&lt;li>Apache Server&lt;/li>
&lt;li>Nginx&lt;/li>
&lt;li>IIS 등&lt;/li>
&lt;/ul>
&lt;h3 id="wasweb-application-server">WAS(Web Application Server)&lt;/h3>
&lt;blockquote>
&lt;p>DB 조회나 다양한 로직 처리를 요구하는 동적인 컨텐츠를 제공하기위해 만들어진 Application Server&lt;/p>
&lt;/blockquote>
&lt;p>HTTP를 통해 컴퓨터나 장치에 어플리케이션을 수행해주는 미들웨어이다.&lt;/p>
&lt;blockquote>
&lt;p>웹 컨테이너(Web Container), 서블릿 컨테이너(Servlet Container)라고도 불림&lt;/p>
&lt;/blockquote>
&lt;h4 id="was의-역할">WAS의 역할&lt;/h4>
&lt;blockquote>
&lt;p>WAS = Web Server + Web Container&lt;/p>
&lt;/blockquote>
&lt;p>웹서버 기능들을 구조적으로 분리하여 처리하고자하는 목적으로 제시됨&lt;/p>
&lt;ul>
&lt;li>분산 트랜잭션&lt;/li>
&lt;li>보안&lt;/li>
&lt;li>메시징&lt;/li>
&lt;li>쓰레드 처리 등&lt;/li>
&lt;/ul>
&lt;p>DB와 서버와 같이 수행됨&lt;/p>
&lt;h4 id="was의-주요-기능">WAS의 주요 기능&lt;/h4>
&lt;ul>
&lt;li>프로그램 실행 환경과 DB 접속 기능 제공&lt;/li>
&lt;li>여러 개의 트랜잭션 관리 기능&lt;/li>
&lt;li>업무를 처리하는 비지니스 로직 수행&lt;/li>
&lt;/ul>
&lt;h4 id="was가-필요한-이유">WAS가 필요한 이유&lt;/h4>
&lt;p>웹 페이지는 정적 컨텐츠와 동적 컨텐츠가 모두 존재한다.&lt;/p>
&lt;ul>
&lt;li>사용자의 요청에 맞게 적절한 동적 컨텐츠를 만들어서 제공해야 한다.&lt;/li>
&lt;li>웹 서버만을 이용하게 되면 그에 맞는 결과가 정적 파일로 존재해야 한다.&lt;/li>
&lt;/ul>
&lt;p>따라서 WAS를 통해 요청에 맞는 데이터를 DB에서 가져와 비즈니스 로직에 맞게 결과를 만들어 제공함으로 자원을 효율적으로 사용할 수 있다.&lt;/p>
&lt;h2 id="was와-web-server를-분리하는-이유">WAS와 Web Server를 분리하는 이유&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>기능 분리를 통한 서버 부하 방지&lt;/strong>&lt;br>
WAS만으로도 웹서비스를 제공 가능하지만 WAS는 DB조회 등 동적인 웹 페이지를 위한 다양한 동작을 하기 때문에 바쁘다. 따라서 웹 서버를 통해 정적인 컨텐츠를 제공하여 부하를 방지한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>물리적으로 분리하여 보안 강화&lt;/strong>&lt;br>
SSL에 대한 암복호화 처리에 웹서버를 사용한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>여러대의 WAS를 연결 가능&lt;/strong>&lt;br>
Load Balancing을 위해 Web Server를 사용 가능하다&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>fail over(장애 극복), fail back 처리에 유리&lt;/li>
&lt;li>여러대의 서버를 사용하는 대용량 웹 어플리케이션의 경우 웹 서버와 WAS를 분리하여 무중단 운영을 위한 장애 극복에 쉽게 대응할 수 있다.&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>&lt;strong>여러 웹 어플리케이션 서비스 가능&lt;/strong>&lt;br>
하나의 웹 서버로 다양한 WAS를 이용하게 만들 수 있다.&lt;/li>
&lt;/ol></description></item></channel></rss>