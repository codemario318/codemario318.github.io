<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NestJS on Mario Blog</title><link>https://codemario318.github.io/tags/nestjs/</link><description>Recent content in NestJS on Mario Blog</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Wed, 24 Sep 2025 12:00:00 +0900</lastBuildDate><atom:link href="https://codemario318.github.io/tags/nestjs/index.xml" rel="self" type="application/rss+xml"/><item><title>NestJS에서 WsAdapter 커스터마이징으로 세션 공유하기</title><link>https://codemario318.github.io/post/nestjs-wsadapter-session/</link><pubDate>Wed, 24 Sep 2025 12:00:00 +0900</pubDate><guid>https://codemario318.github.io/post/nestjs-wsadapter-session/</guid><description>&lt;img src="https://codemario318.github.io/post/nestjs-wsadapter-session/cover.png" alt="Featured image of post NestJS에서 WsAdapter 커스터마이징으로 세션 공유하기" />&lt;p>부스트캠프 9기 실시간 퀴즈 게임 프로젝트에서는 로그인 절차 없이 바로 참여할 수 있도록 &lt;strong>세션 기반 사용자 식별&lt;/strong>을 적용했습니다.&lt;/p>
&lt;p>사용자가 서비스에 접근하면 초기 API를 반드시 호출하도록 설계했고, 이때 &lt;strong>쿠키에 세션 ID를 담아&lt;/strong> 식별에 활용했습니다.&lt;/p>
&lt;p>문제는 REST API에서는 세션이 정상 동작하지만, WebSocket Gateway에서는 동일한 쿠키가 전달되어도 &lt;strong>세션이 보이지 않는&lt;/strong> 상황이었습니다.&lt;/p>
&lt;p>이 글은 &lt;strong>왜 그런지&lt;/strong>를 구조적으로 짚고, 제가 실제로 적용한 &lt;strong>해결법&lt;/strong>과 &lt;strong>대안들&lt;/strong>을 정리한 기록입니다.&lt;/p>
&lt;h2 id="문제-발견">문제 발견&lt;/h2>
&lt;ul>
&lt;li>REST API: &lt;code>req.session&lt;/code> 정상&lt;/li>
&lt;li>WebSocket Gateway: 동일 쿠키가 있어도 &lt;code>req.session&lt;/code> 접근 불가&lt;/li>
&lt;li>브라우저/서버 로그로 세션 생성 자체는 확인&lt;/li>
&lt;/ul>
&lt;p>즉, 세션이 없는 게 아니라 &lt;strong>WS 경로에서 세션을 읽어올 수 없는 구조&lt;/strong>였습니다.&lt;/p>
&lt;h2 id="첫-시도-handleconnection-훅에서-쿠키-직접-파싱">첫 시도: &lt;code>handleConnection&lt;/code> 훅에서 쿠키 직접 파싱&lt;/h2>
&lt;p>Nest Gateway 라이프사이클에서 &lt;code>handleConnection(client, ...args)&lt;/code>는 &lt;strong>클라이언트 연결 시 1회 호출&lt;/strong>되며 구현에 따라 &lt;strong>원본 HTTP 요청&lt;/strong>을 인자로 받을 수 있습니다.&lt;/p>
&lt;p>처음에는 이 훅에서 쿠키를 직접 파싱하여 세션 ID를 추출했습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// gateways/play.gateway.ts (요약)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">WebSocketGateway&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">OnGatewayConnection&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@nestjs/websockets&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="kr">type&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">WebSocket&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;ws&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="kr">type&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">IncomingMessage&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;http&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">parse&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;cookie&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">@WebSocketGateway&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/ws/play&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">PlayGateway&lt;/span> &lt;span class="kr">implements&lt;/span> &lt;span class="nx">OnGatewayConnection&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">handleConnection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">client&lt;/span>: &lt;span class="kt">WebSocket&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">request&lt;/span>: &lt;span class="kt">IncomingMessage&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">cookies&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">headers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">cookie&lt;/span> &lt;span class="o">??&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">client&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;sessionId&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">cookies&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;connect.sid&amp;#39;&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">at&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="기존-방식의-한계">기존 방식의 한계&lt;/h3>
&lt;p>간단히 동작했지만 곧 한계가 드러났습니다.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>쿠키 포맷과 서명 정책에 강하게 결합&lt;/strong>
&lt;ul>
&lt;li>&lt;code>connect.sid&lt;/code> 값은 보통 &lt;code>s:&lt;/code> 접두가 붙은 서명된 문자열입니다. 당시 구현은 단순한 문자열 분해로 임시 ID를 뽑아 쓰는 수준이었기 때문에, 쿠키 이름이나 옵션, 서명 방식이 조금만 바뀌어도 쉽게 깨지는 방식으로 쿠키 포맷과 서명 정책에 강하게 결합되어 있었습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>무결성 검증을 우회&lt;/strong>
&lt;ul>
&lt;li>&lt;code>express-session&lt;/code>은 서명 검증, 재발급(regenerate), 삭제된 세션 식별 같은 절차를 미들웨어에서 처리하지만, handleConnection에서 직접 파싱하면 이 과정을 건너뛰게 되어, 변조된 쿠키나 이미 폐기된 세션을 걸러낼 근거가 없습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>세션 수명 관리&lt;/strong>
&lt;ul>
&lt;li>&lt;code>express-session&lt;/code>은 요청마다 touch()로 TTL을 연장하고, 스토어에서 최신 세션 내용을 불러오지만, 이 방식은 스토어 조회를 하지 않기 때문에 WS 쪽 상태가 갱신되지 않고, 게임 도중 세션이 만료될 수 있습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>프레임워크 버전 변경에 취약&lt;/strong>
&lt;ul>
&lt;li>쿠키 포맷이나 미들웨어 내부 정책이 바뀌면, 게이트웨이에 흩어진 파싱 로직을 모두 수정해야 합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>요약하면, 이 시도는 ‘세션처럼 보이게’만 한 것이지, 세션이 제공하는 검증·갱신·저장의 보장을 사용하지 못한 상태였습니다.&lt;/p>
&lt;h2 id="내부-구조-이해">내부 구조 이해&lt;/h2>
&lt;p>Nest는 기본적으로 &lt;strong>Express 위에서&lt;/strong> 동작합니다. 관건은 REST와 WS의 경로가 &lt;strong>다른 파이프라인&lt;/strong>으로 처리된다는 점입니다.&lt;/p>
&lt;h3 id="rest-요청의-흐름">REST 요청의 흐름&lt;/h3>
&lt;p>Express 라우터 체인을 통과하며 &lt;code>cookie-parser&lt;/code> → &lt;code>express-session&lt;/code> → &lt;code>Controller&lt;/code> 순으로 실행됩니다.&lt;/p>
&lt;pre class="mermaid" style="text-align: center;">graph LR
A[클라이언트 요청] --> B[cookie-parser]
B --> C[express-session]
C --> D[Controller]
&lt;/pre>
&lt;h3 id="websocket-요청의-흐름">WebSocket 요청의 흐름&lt;/h3>
&lt;p>WS 연결은 HTTP 업그레이드로 시작되며, &lt;strong>Express 라우터 체인을 거치지 않습니다&lt;/strong>.&lt;/p>
&lt;pre class="mermaid" style="text-align: center;">sequenceDiagram
participant Client as 브라우저
participant Server as 서버(HTTP)
Client->>Server: GET /ws (Upgrade: websocket)
Server-->>Client: 101 Switching Protocols
Note over Client,Server: 이후 WebSocket 프레임으로 통신
&lt;/pre>
&lt;p>Nest의 &lt;code>WsAdapter&lt;/code>는 업그레이드 요청을 받아 &lt;code>ws&lt;/code> 서버로 위임합니다.&lt;/p>
&lt;p>이 흐름 때문에 WS는 Express 미들웨어 체인을 통과하지 않아 기본 상태로는 &lt;code>req.session&lt;/code>을 사용할 수 없습니다.&lt;/p>
&lt;h2 id="해결-방법-업그레이드-래핑">해결 방법: 업그레이드 래핑&lt;/h2>
&lt;p>핵심 아이디어는 간단합니다.&lt;/p>
&lt;p>Nest 기본 업그레이드 흐름을 그대로 재현하되, 그 앞단에 &lt;code>express-session&lt;/code> 미들웨어를 한 번 실행해 &lt;code>req.session&lt;/code>을 준비하고, 연결 직후 &lt;code>ws.session = req.session&lt;/code>을 추가하는 것입니다.&lt;/p>
&lt;p>Nest의 WsAdapter에서 http 서버가 upgrade 요청이 발생했을 때 WS 서버로 위임해주는 과정은 &lt;code>ensureHttpServerExists&lt;/code> 메서드에서 처리됩니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">WsAdapter&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">AbstractWsAdapter&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* 생략 */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">protected&lt;/span> &lt;span class="nx">ensureHttpServerExists&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">port&lt;/span>: &lt;span class="kt">number&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">httpServer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createServer&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">httpServersRegistry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">has&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">httpServersRegistry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="kr">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">httpServer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">httpServer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;upgrade&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">socket&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">head&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">baseUrl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;ws://&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">headers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">host&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">pathname&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">URL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">baseUrl&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">pathname&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">wsServersCollection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">wsServersRegistry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="kr">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">isRequestDelegated&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">wsServer&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">wsServersCollection&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">pathname&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">wsServer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">wsServer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">handleUpgrade&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">socket&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">ws&lt;/span>: &lt;span class="kt">unknown&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">wsServer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">emit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;connection&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ws&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">request&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">isRequestDelegated&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">isRequestDelegated&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">destroy&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">end&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;HTTP/1.1 400\r\n&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">httpServer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* 생략 */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>http 서버에 &lt;code>upgrade&lt;/code> 이벤트를 등록하는 부분 &lt;code>httpServer.on('upgrade', (request, socket, head) =&amp;gt; {})&lt;/code>에서 넘겨주는 핸들러를 그대로 활용하여 세션만 붙이는 방식으로 기존 처리는 유지하면서 세션에 접근할 수 있도록 했습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// session-ws.adapter.ts (요약)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">export&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">SessionWsAdapter&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">WsAdapter&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">constructor&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">private&lt;/span> &lt;span class="kr">readonly&lt;/span> &lt;span class="nx">app&lt;/span>: &lt;span class="kt">NestApplication&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">private&lt;/span> &lt;span class="kr">readonly&lt;/span> &lt;span class="nx">sessionMiddleware&lt;/span>: &lt;span class="kt">RequestHandler&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">super&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">port&lt;/span>: &lt;span class="kt">number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">options?&lt;/span>: &lt;span class="kt">any&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">httpServer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getHttpServer&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">wsServer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">options&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">httpServer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">removeAllListeners&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;upgrade&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">httpServer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;upgrade&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">socket&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">head&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sessionMiddleware&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{}&lt;/span> &lt;span class="kr">as&lt;/span> &lt;span class="kt">any&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">pathname&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">URL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;ws://&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">headers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">host&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">pathname&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">wsServers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">wsServersRegistry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="kr">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">s&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">wsServers&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">pathname&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">handleUpgrade&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">socket&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">ws&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nx">ws&lt;/span> &lt;span class="kr">as&lt;/span> &lt;span class="kt">any&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">session&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span> &lt;span class="kr">as&lt;/span> &lt;span class="kt">any&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">session&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">emit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;connection&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ws&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">req&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">destroy&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">wsServer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>create 메서드를 다시 구현하여 기존 처리를 그대로 수행한 후, upgrade 이벤트 핸들러를 세션 미들웨어로 감싸 세션에 직접 접근할 수 있도록 했습니다.&lt;/p>
&lt;p>이러한 처리를 통해 게이트웨이는 아무 수정 없이 세션을 그대로 사용할 수 있습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// play.gateway.ts
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">@WebSocketGateway&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/ws/play&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">PlayGateway&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">@SubscribeMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;start&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">handleStart&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">@ConnectedSocket&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nx">client&lt;/span>: &lt;span class="kt">any&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">sid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">session&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">nickname&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">session&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">nick&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 게임 로직...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="해결-방법의-한계">해결 방법의 한계&lt;/h3>
&lt;p>이 방식은 동작이 분명하고 기존 코드를 거의 그대로 재사용할 수 있다는 장점이 있지만, 동시에 몇 가지 한계가 존재합니다.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>프레임워크 내부 변경에 취약&lt;/strong>
&lt;ul>
&lt;li>&lt;code>ensureHttpServerExists&lt;/code> 내부 흐름을 긁어와 쓰는 구조라 Nest나 ws/http 버전 업그레이드 시 동작이 달라질 수 있습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>세션 TTL 관리&lt;/strong>
&lt;ul>
&lt;li>업그레이드 시점에만 세션을 붙이므로 TTL 갱신(touch)이 자동으로 되지 않아 장시간 연결에서는 세션 만료 문제가 발생할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>스케일 아웃 고려&lt;/strong>
&lt;ul>
&lt;li>사용자 증가로 멀티 노드 환경이 필요하다면, 현재 구현체를 그대로 활용하거나 변경하여 사용하는 방식은 매우 효과적이지 않을 것으로 예상됩니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="대안">대안&lt;/h2>
&lt;p>선택한 방법 외에도 대안으로 선택될 수 있는 여러 옵션이 있었습니다.&lt;/p>
&lt;h3 id="socketio-전환--전역-어댑터로-최소-변경-적용">Socket.IO 전환 — 전역 어댑터로 최소 변경 적용&lt;/h3>
&lt;p>Socket.IO를 사용하면 위와 동일한 과정을 단순하게 처리할 수 있습니다.&lt;/p>
&lt;p>게이트웨이마다 설정을 반복하지 않고, 전역 IoAdapter에서 한 번만 &lt;code>express-session&lt;/code> 미들웨어를 연결하면 프로젝트 전반에 일관되게 적용할 수 있습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// session-io.adapter.ts
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">export&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">SessionIoAdapter&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">IoAdapter&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">app&lt;/span>: &lt;span class="kt">any&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kr">private&lt;/span> &lt;span class="kr">readonly&lt;/span> &lt;span class="nx">sessionMiddleware&lt;/span>: &lt;span class="kt">RequestHandler&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">super&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">override&lt;/span> &lt;span class="nx">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">port&lt;/span>: &lt;span class="kt">number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">options?&lt;/span>: &lt;span class="kt">any&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">io&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">options&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kr">as&lt;/span> &lt;span class="nx">IOServer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">use&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">socket&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sessionMiddleware&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">request&lt;/span> &lt;span class="kr">as&lt;/span> &lt;span class="kt">any&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{}&lt;/span> &lt;span class="kr">as&lt;/span> &lt;span class="kt">any&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// main.ts
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="nx">NestFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">AppModule&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cookieParser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">COOKIE_SECRET&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">sessionMiddleware&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">session&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="cm">/* 기존 세션 설정 */&lt;/span>&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">sessionMiddleware&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">useWebSocketAdapter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">SessionIoAdapter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">sessionMiddleware&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>위와 같은 처리를 통해 Nest의 기본 처리에 변경 없이 문제를 해결할 수 있고, 마찬가지로 게이트웨이에서는 추가 코드 없이 &lt;code>socket.request.session&lt;/code>을 그대로 사용할 수 있습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// play.gateway.ts
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">@WebSocketGateway&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;/ws/play&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">PlayGateway&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">@SubscribeMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;start&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">handleStart&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">@ConnectedSocket&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nx">socket&lt;/span>: &lt;span class="kt">Socket&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">sid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">session&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">nick&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">session&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">nick&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 게임 로직...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>마찬가지로 이 방법도 여러 한계와 고려사항을 검토해야 합니다.&lt;/p>
&lt;ul>
&lt;li>성능 오버헤드
&lt;ul>
&lt;li>Socket.IO는 ws보다 추상화 레이어가 있어 초고성능이 필요한 경우 오버헤드가 발생할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>의존성 증가/리팩터링 비용
&lt;ul>
&lt;li>Socket.IO 고유의 API에 종속되므로 기존 ws 코드 전환 시 비용이 발생합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>스케일링 복잡성
&lt;ul>
&lt;li>멀티 노드 환경에서 Redis adapter 등 추가 설정이 필요합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>행동 차이
&lt;ul>
&lt;li>Socket.IO의 핸드셰이크/재연결/메시지 처리 방식이 ws와 달라 클라이언트 호환성 테스트가 필요합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="세션을-쓰지-않는-방법">세션을 쓰지 않는 방법&lt;/h3>
&lt;p>세션을 끌고 오지 않아도 사용자를 식별할 수 있습니다.&lt;/p>
&lt;p>서비스에서 쿠키와 세션을 활용한 이유는 어떠한 사용자라도 고유하게 사용자를 식별할 수 있는 수단이 필요했던 것 뿐이고, express-session을 통해 이미 구현된 기능을 통해 직접 구현을 최소화 하는 것을 원했기 때문입니다.&lt;/p>
&lt;p>결과적으로 서버가 고유한 값을 발급하고, 클라이언트가 그 값을 명시적으로 전달하도록 하면 어떠한 방법이든 활용할 수 있으며, 대표적으로 JWT, Opaque 토큰과 같은 방법들을 고려해볼 수 있습니다.&lt;/p>
&lt;p>JWT는 서명 검증만으로 식별이 가능하고, Opaque 토큰(WS 전용 토큰)은 서버 저장소에 &lt;code>token → 사용자 정보&lt;/code>를 저장해두었다가 조회하는 방식으로 처리합니다.&lt;/p>
&lt;pre class="mermaid" style="text-align: center;">sequenceDiagram
autonumber
participant C as Client
participant API as REST API
participant R as Redis
participant WS as WS 서버
C->>API: POST /rooms/:id/join { nick }
API->>R: 저장 (token → { roomId, nick })
API-->>C: { token }
C->>WS: GET /ws/play?token=... (Upgrade)
WS->>R: token 조회
R-->>WS: { roomId, nick }
WS-->>C: 연결 수립 (ws.user 바인딩)
&lt;/pre>
&lt;p>연결 전에 “게스트 입장” 같은 API 단계를 두는 것이 일반적입니다.&lt;/p>
&lt;p>클라이언트가 먼저 API를 호출하면 서버는 토큰을 발급하고, 클라이언트는 WS 연결 시 쿼리 파라미터나, &lt;code>Sec-WebSocket-Protocol&lt;/code>로 전달합니다. 서버는 이를 검증해 사용자 정보를 연결에 부착합니다.&lt;/p>
&lt;p>JWT를 사용하는 경우에는 서버 저장소 조회가 필요 없지만, 만료 관리와 강제 무효화 설계는 별도로 고려해야 합니다.&lt;/p>
&lt;p>위 방법도 여러 문제들을 먼저 고려해야 합니다.&lt;/p>
&lt;ul>
&lt;li>JWT: 만료·갱신·강제무효화
&lt;ul>
&lt;li>JWT는 stateless이므로 리프레시 토큰이나 블랙리스트 등 만료/무효화 전략이 필요합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>JWT: 전달 경로 제약
&lt;ul>
&lt;li>브라우저의 업그레이드 요청에서 Authorization 헤더를 자동으로 보내지 않으므로 Sec-WebSocket-Protocol이나 쿼리 파라미터 사용을 고려해야 합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Opaque 토큰: 저장소 의존성
&lt;ul>
&lt;li>Redis 등 중앙 저장소가 장애를 겪으면 인증/접속 흐름이 영향을 받습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>토큰 관리 복잡성
&lt;ul>
&lt;li>TTL 설계, 연장(heartbeat), 동시 접속 제어 등 정책을 잘 설계해야 합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>운영·모니터링 비용
&lt;ul>
&lt;li>발급/사용/회수 로그, 이상행동 탐지, 토큰 재발급 로직의 모니터링 필요할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="회고">회고&lt;/h2>
&lt;p>문제의 원인은 &lt;strong>WS 경로가 Express 미들웨어 체인을 통과하지 않는다&lt;/strong>는 구조에 있었습니다.&lt;/p>
&lt;p>해결은 Nest 기본 업그레이드 흐름 앞단에 &lt;code>express-session&lt;/code>을 실행해 WS에 세션을 붙여 REST와 WS가 동일한 세션 컨텍스트를 공유했습니다.&lt;/p>
&lt;p>다만 당시 프로젝트 상황에서는 빠른 기능 구현과 안정적인 데모가 더 중요했기 때문에, 구조를 크게 바꾸기보다는 WsAdapter를 감싸는 방식으로 해결했습니다.&lt;/p>
&lt;p>이후 장기적으로는 &lt;strong>Socket.IO 전환&lt;/strong>이나 &lt;strong>JWT/WS 전용 토큰 방식&lt;/strong>으로 구조를 단순화하는 것도 충분히 고려할 수 있습니다.&lt;/p>
&lt;p>결국 중요한 것은 서비스 요구와 운영 조건에 맞는 선택을 하는 것입니다.&lt;/p></description></item><item><title>Redis 사용 여부 결정하기: 지금은 단순하게, 나중엔 안전하게</title><link>https://codemario318.github.io/post/redis-decision/</link><pubDate>Fri, 19 Sep 2025 11:18:49 +0900</pubDate><guid>https://codemario318.github.io/post/redis-decision/</guid><description>&lt;img src="https://codemario318.github.io/post/redis-decision/cover.png" alt="Featured image of post Redis 사용 여부 결정하기: 지금은 단순하게, 나중엔 안전하게" />&lt;blockquote>
&lt;p>Redis는 훌륭한 도구지만, 우리 서비스에 &lt;strong>지금&lt;/strong> 필요한지부터 질문했습니다.&lt;br>
단일 서버에서는 과잉 설계를 피하고, 필요해지면 &lt;strong>안전하게 전환&lt;/strong>할 수 있도록 길을 열어두었습니다.&lt;/p>
&lt;/blockquote>
&lt;p>부스트캠프 팀 프로젝트를 진행하던 중, “다른 팀들은 Redis를 쓰던데, 우리도 써야 하지 않을까요?”라는 의견이 나왔습니다.&lt;/p>
&lt;p>Redis가 워낙 널리 쓰이다 보니 자연스러운 질문이었지만, 조금 더 들여다보니 &lt;strong>‘필요해서’라기보다 ‘회사에서 많이 쓰니까’&lt;/strong> 도입한 경우도 적지 않았습니다.&lt;/p>
&lt;p>저는 기술 역량을 보여주는 프로젝트라 하더라도 필요한 만큼만 활용하는 것이 바람직하다고 생각했습니다. 그런 이유로 Redis를 꼭 써야 한다는 의견을 조율하며 동료들을 설득했는데, 이번 글에서는 그 과정을 공유드리려 합니다.&lt;/p>
&lt;h2 id="redis가-보통-쓰이는-곳">Redis가 보통 쓰이는 곳&lt;/h2>
&lt;p>Redis는 메모리 기반이라 매우 빠르며, 기본 저장은 RAM에 이루어집니다. 영속성은 기본 동작에 포함되지 않지만, 필요에 따라 RDB 스냅샷이나 AOF로 설정할 수 있습니다 (캐시 용도로는 보통 최소화하거나 비활성화합니다).&lt;/p>
&lt;p>애플리케이션 프로세스 외부에서 메모리를 관리하기 때문에, 여러 서버가 상태를 공유해야 할 때 세션·캐시·레이트리밋·분산 락 등에 유용합니다. 또한 서버 간 Pub/Sub 같은 이벤트 브로커로도 활용됩니다.&lt;/p>
&lt;p>&lt;img src="https://codemario318.github.io/post/redis-decision/img_1.png"
width="385"
height="131"
srcset="https://codemario318.github.io/post/redis-decision/img_1_hub1d81362073527ddf71ea0c3bd077b97_8690_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/redis-decision/img_1_hub1d81362073527ddf71ea0c3bd077b97_8690_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Redis"
class="gallery-image"
data-flex-grow="293"
data-flex-basis="705px"
>&lt;/p>
&lt;ul>
&lt;li>여러 서버 간 &lt;strong>공유 메모리 저장소&lt;/strong>(세션/상태 공유)&lt;/li>
&lt;li>&lt;strong>캐시 계층&lt;/strong>(DB 부하 완화)&lt;/li>
&lt;li>&lt;strong>Pub/Sub&lt;/strong>(분산 이벤트 브로커)&lt;/li>
&lt;/ul>
&lt;p>이 요구가 &lt;strong>명확하다면&lt;/strong> Redis는 아주 좋은 선택입니다.&lt;/p>
&lt;h2 id="redis-도입의-트레이드오프">Redis 도입의 트레이드오프&lt;/h2>
&lt;p>&lt;a class="link" href="https://redis.io/docs/latest/develop/data-types/json/performance/" target="_blank" rel="noopener"
>레디스 공식 문서&lt;/a>에 따르면 단순 명령(PING)은 약 14만 ops/sec 수준으로 처리할 수 있고, JSON 형식의 데이터라도 작은 객체(&lt;code>380B&lt;/code>) ~ 큰 객체(&lt;code>3.5KB&lt;/code>)까지 &lt;code>SET/GET&lt;/code> 시나리오 테스트 결과 크기가 커질수록 성능은 저하되지만, 여전히 수만 ~ 수십만 ops/sec 수준을 유지할 만큼 뛰어난 성능을 보여줍니다.&lt;/p>
&lt;p>이러한 수치만 볼 때는 Redis 도입이 당연히 좋아 보입니다. 하지만 실제로는 어떨까요?&lt;/p>
&lt;p>Redis 도입의 트레이드오프는 Redis 자체 성능이 아니라, &lt;strong>별도의 프로세스로 실행된다는 사실&lt;/strong>에서 발생합니다.&lt;/p>
&lt;h3 id="네트워크-비용">네트워크 비용&lt;/h3>
&lt;p>별도의 프로세스로 실행되기 때문에 매 요청마다 네트워크 왕복 비용이 발생합니다.&lt;/p>
&lt;p>&lt;img src="https://codemario318.github.io/post/redis-decision/img_2.png"
width="1024"
height="1004"
srcset="https://codemario318.github.io/post/redis-decision/img_2_hue71c0d90dd58fe1dda7ccd293ce69a3d_232739_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/redis-decision/img_2_hue71c0d90dd58fe1dda7ccd293ce69a3d_232739_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Latency numbers chart"
class="gallery-image"
data-flex-grow="101"
data-flex-basis="244px"
>&lt;/p>
&lt;p>위 자료는 Jeff Dean의 &lt;em>Latency Numbers Every Programmer Should Know&lt;/em> 자료로, 컴퓨터 시스템에서 연산·메모리·스토리지·네트워크 등 다양한 계층의 지연 시간을 시각화하기 위한 자료입니다.&lt;/p>
&lt;p>위 자료에 따르면 메인 메모리 접근은 약 100ns 수준에 불과하지만, 같은 데이터센터 내 네트워크 왕복은 약 500,000ns(≈ 500μs)로, 단순 메모리 접근 대비 수천 배 이상의 지연이 발생합니다.&lt;/p>
&lt;p>결국 Redis처럼 외부 프로세스를 경유하는 경우, 단일 서버에서의 단순 메모리 접근과는 큰 성능 차이가 불가피합니다.&lt;/p>
&lt;h3 id="관리-복잡성">관리 복잡성&lt;/h3>
&lt;p>Redis를 별도로 운영해야 하기 때문에 관리 복잡성이 늘어납니다.&lt;/p>
&lt;p>추가 서버나 컨테이너를 띄워야 하고, 장애 대응·보안 설정·모니터링·백업 같은 관리 포인트가 생깁니다.&lt;/p>
&lt;p>규모가 작은 서비스에서는 이런 관리 비용이 성능상의 이점보다 더 크게 다가올 수 있습니다.&lt;/p>
&lt;hr>
&lt;p>즉, Redis는 분명 빠르지만, &lt;strong>단일 서버 + 단순 상태 공유&lt;/strong> 구조에서는 오히려 &lt;strong>성능 저하&lt;/strong>와 &lt;strong>불필요한 복잡성&lt;/strong>을 초래할 수 있습니다.&lt;/p>
&lt;h2 id="당시-서비스-상황">당시 서비스 상황&lt;/h2>
&lt;p>&lt;img src="https://codemario318.github.io/post/redis-decision/img.png"
width="1159"
height="1009"
srcset="https://codemario318.github.io/post/redis-decision/img_hucba1fe36dc05ad6ffed8239b87d7a9ab_96618_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/redis-decision/img_hucba1fe36dc05ad6ffed8239b87d7a9ab_96618_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="서비스 아키텍처"
class="gallery-image"
data-flex-grow="114"
data-flex-basis="275px"
>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Nginx 리버스 프록시&lt;/strong>로 정적 파일, Nest API, WebSocket을 분기&lt;/li>
&lt;li>&lt;strong>단일 서버 환경&lt;/strong> (인스턴스 간 세션/상태 공유 요건 없음)&lt;/li>
&lt;li>DB 부하도 Redis 캐시 없이 충분히 감당&lt;/li>
&lt;/ul>
&lt;p>즉, 이 단계에서는 &lt;strong>서버 내부 메모리(Map 등)&lt;/strong> 만으로도 서비스가 안정적으로 동작했습니다.&lt;/p>
&lt;h2 id="지금은-in-memory-나중엔-redis">지금은 In-Memory, 나중엔 Redis&lt;/h2>
&lt;p>당장은 Redis를 도입하지 않고, &lt;strong>언제든 쉽게 붙일 수 있도록 추상화&lt;/strong>만 해두었습니다.&lt;br>
핵심은 &lt;strong>도메인 로직이 저장소 구현을 모르게&lt;/strong> 하는 것입니다.&lt;/p>
&lt;h3 id="store-인터페이스">Store 인터페이스&lt;/h3>
&lt;p>도메인 로직이 의존할 &lt;strong>공통 인터페이스&lt;/strong>입니다.&lt;br>
구현체는 In-Memory 버전이든 Redis 버전이든 동일한 인터페이스를 만족하기만 하면 됩니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">interface&lt;/span> &lt;span class="nx">QuizZoneStore&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Promise&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">QuizZone&lt;/span> &lt;span class="err">|&lt;/span> &lt;span class="na">null&lt;/span>&lt;span class="p">&amp;gt;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">value&lt;/span>: &lt;span class="kt">QuizZone&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Promise&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">void&lt;/span>&lt;span class="p">&amp;gt;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Promise&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">void&lt;/span>&lt;span class="p">&amp;gt;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">has&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">key&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Promise&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">boolean&lt;/span>&lt;span class="p">&amp;gt;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="in-memory-구현-현재">In-Memory 구현 (현재)&lt;/h3>
&lt;p>현재 서비스 상황에서는 &lt;strong>Map 기반 메모리 저장소&lt;/strong>만으로 충분했습니다.
Nest의 의존성 주입을 통해 &lt;code>Map&lt;/code>을 주입받아 사용합니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Injectable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Inject&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@nestjs/common&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">@Injectable&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">QuizZoneMemoryStore&lt;/span> &lt;span class="kr">implements&lt;/span> &lt;span class="nx">QuizZoneStore&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">constructor&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">@Inject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;QuizZoneStorage&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">private&lt;/span> &lt;span class="kr">readonly&lt;/span> &lt;span class="nx">data&lt;/span>: &lt;span class="kt">Map&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">string&lt;/span>&lt;span class="err">,&lt;/span> &lt;span class="na">QuizZone&lt;/span>&lt;span class="p">&amp;gt;,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="kr">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="kr">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">??&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="kr">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span>: &lt;span class="kt">QuizZone&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="kr">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">has&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">has&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="k">delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="redis-구현-향후-확장용">Redis 구현 (향후 확장용)&lt;/h3>
&lt;p>규모가 커져 여러 서버에서 상태를 공유해야 할 때는
동일한 인터페이스를 구현하는 &lt;strong>Redis 저장소&lt;/strong>로 교체할 수 있습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Injectable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Inject&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@nestjs/common&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="nx">Redis&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;ioredis&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">@Injectable&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">QuizZoneRedisStore&lt;/span> &lt;span class="kr">implements&lt;/span> &lt;span class="nx">QuizZoneStore&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">constructor&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">@Inject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;RedisClient&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">private&lt;/span> &lt;span class="kr">readonly&lt;/span> &lt;span class="nx">redis&lt;/span>: &lt;span class="kt">Redis&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="kr">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">json&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="kr">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">json&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kr">as&lt;/span> &lt;span class="nx">QuizZone&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="kr">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span>: &lt;span class="kt">QuizZone&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="kr">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">has&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exists&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="k">delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">del&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>이러한 설계로 인해 서비스 로직은 &lt;code>QuizZoneStore&lt;/code> 인터페이스만 바라봅니다.
따라서 구현체가 메모리이든 Redis이든, &lt;strong>비즈니스 로직은 그대로 유지됩니다.&lt;/strong>&lt;/p>
&lt;h2 id="nest도-같은-방향입니다">Nest도 같은 방향입니다&lt;/h2>
&lt;p>NestJS의 &lt;code>CacheModule&lt;/code>은 &lt;strong>메모리 캐시 / Redis 캐시를 같은 인터페이스로 다룰 수 있게&lt;/strong> 합니다.
아래는 &lt;a class="link" href="https://docs.nestjs.com/techniques/caching/" target="_blank" rel="noopener"
>공식 문서&lt;/a>의 예시 코드입니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Module&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@nestjs/common&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">CacheModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@nestjs/cache-manager&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="nx">KeyvRedis&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@keyv/redis&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Keyv&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;keyv&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">CacheableMemory&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;cacheable&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">@Module&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">imports&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">CacheModule&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">registerAsync&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">useFactory&lt;/span>: &lt;span class="kt">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">stores&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="nx">Keyv&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">store&lt;/span>: &lt;span class="kt">new&lt;/span> &lt;span class="nx">CacheableMemory&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">ttl&lt;/span>: &lt;span class="kt">60000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">lruSize&lt;/span>: &lt;span class="kt">5000&lt;/span> &lt;span class="p">}),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="nx">KeyvRedis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;redis://localhost:6379&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">AppModule&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>메시지는 명확합니다. &lt;strong>“인터페이스는 고정하고, 구현체만 바꿔라.”&lt;/strong>&lt;/p>
&lt;h2 id="그래서-우리는-redis가-필요-없었습니다">그래서 우리는 Redis가 필요 없었습니다&lt;/h2>
&lt;p>요약하면, Redis의 본질은 &lt;strong>외부에 존재하는 공유 메모리&lt;/strong>입니다.
하지만 저희는 단일 서버였기 때문에,&lt;/p>
&lt;ul>
&lt;li>&lt;strong>공유 메모리 자체가 필요 없었고&lt;/strong>&lt;/li>
&lt;li>&lt;strong>캐시는 서버 메모리(Map)&lt;/strong> 로 충분했고&lt;/li>
&lt;li>&lt;strong>Pub/Sub 역시 여러 서버 간 메시지 브로커가 필요하지 않았습니다&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>따라서 Redis는 그 시점의 우리에게 &lt;strong>과잉 설계&lt;/strong>였습니다.&lt;/p>
&lt;h2 id="redis가-필요해질-신호">Redis가 필요해질 신호&lt;/h2>
&lt;ul>
&lt;li>다중 인스턴스/오토스케일링으로 &lt;strong>세션/상태 공유&lt;/strong>가 필요한 경우&lt;/li>
&lt;li>DB 핫스팟/지연 증가로 &lt;strong>캐시 계층&lt;/strong>이 필요한 경우&lt;/li>
&lt;li>마이크로서비스 전환으로 &lt;strong>이벤트 브로커(Pub/Sub)&lt;/strong> 가 필요한 경우&lt;/li>
&lt;li>&lt;strong>대규모 동시성&lt;/strong>(랭킹, 레이트리밋 등)을 다뤄야 하는 경우&lt;/li>
&lt;/ul>
&lt;p>이런 신호가 보이면, 이미 준비해 둔 인터페이스 뒤에 Redis 구현체를 &lt;strong>안전하게&lt;/strong> 붙이면 됩니다.&lt;/p>
&lt;h2 id="마무리">마무리&lt;/h2>
&lt;p>기술은 &lt;strong>문제 해결&lt;/strong>을 위해 존재합니다.
“남들도 쓰니까”가 아니라, “&lt;strong>우리에게 지금 필요한가&lt;/strong>”를 먼저 묻는 것이 중요합니다.&lt;/p>
&lt;p>저희는 당시 Redis를 도입하지 않았고, 그 선택 덕분에 &lt;strong>불필요한 복잡성&lt;/strong>을 피하면서도
&lt;strong>추상화&lt;/strong>를 통해 &lt;strong>향후 전환 가능성&lt;/strong>은 충분히 확보할 수 있었습니다.&lt;/p></description></item></channel></rss>