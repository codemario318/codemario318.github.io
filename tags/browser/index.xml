<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Browser on Mario Blog</title><link>https://codemario318.github.io/tags/browser/</link><description>Recent content in Browser on Mario Blog</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Tue, 18 Apr 2023 18:48:11 +0900</lastBuildDate><atom:link href="https://codemario318.github.io/tags/browser/index.xml" rel="self" type="application/rss+xml"/><item><title>브라우저</title><link>https://codemario318.github.io/post/browser/</link><pubDate>Tue, 18 Apr 2023 18:48:11 +0900</pubDate><guid>https://codemario318.github.io/post/browser/</guid><description>&lt;img src="https://codemario318.github.io/post/browser/browser_cover.jpeg" alt="Featured image of post 브라우저" />&lt;h2 id="브라우저-기본-구조">브라우저 기본 구조&lt;/h2>
&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_1.png"
width="500"
height="339"
srcset="https://codemario318.github.io/post/browser/browser_1_hu933f79fceee15062bb52033347f46413_29372_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_1_hu933f79fceee15062bb52033347f46413_29372_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="147"
data-flex-basis="353px"
>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>사용자 인테페이스&lt;/strong>&lt;br>
요청한 페이지를 보여주는 부분의 제외한 나머지 부분&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>브라우저 엔진&lt;/strong>&lt;br>
사용자 인터페이스와 렌더링 엔진 사이의 동작을 제어&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>랜더링 엔진&lt;/strong>&lt;br>
요청한 콘텐츠 표시&lt;/p>
&lt;ul>
&lt;li>HTML을 요청하면 HTML과 CSS를 파싱하여 화면에 표시함&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>통신&lt;/strong>&lt;br>
HTTP 요청과 같은 네트워크 호출에 사용됨.&lt;/p>
&lt;ul>
&lt;li>플랫폼 독립적인 인터페이스이고 각 플랫폼 하부에서 실행됨.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>UI 백앤드&lt;/strong>&lt;br>
콤보 박스와 창 같은 기본적인 장치를 그림&lt;/p>
&lt;ul>
&lt;li>플랫폼에서 명시하지 않은 일반적인 인터페이스로서, OS 사용자 인터페이스 체계를 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>자바스크립트 해석기&lt;/strong>&lt;br>
자바스크립트 코드를 해석하고 실행&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>자료 저장소&lt;/strong>&lt;br>
자료를 저장하는 계층으로 쿠키와 같은 모든 종류의 자원을 하드디스크에 저장.&lt;/p>
&lt;ul>
&lt;li>HTML5에는 브라우저가 지원하는 &amp;lsquo;웹 데이터 베이스&amp;rsquo; 가 정의되어 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>크롬은 대부분의 브라우저와 달리 각 탭마다 별도의 렌더링 엔진 인스턴스를 유지하여, 각 탭이 독립된 프로세스로 처리된다.&lt;/p>
&lt;/blockquote>
&lt;h2 id="렌더링">렌더링&lt;/h2>
&lt;h3 id="렌더링-엔진">렌더링 엔진&lt;/h3>
&lt;blockquote>
&lt;p>요청받은 내용을 브라우저 화면에 표시함.
HTML 및 XML 문서와 이미지를 표시할 수 있다.&lt;/p>
&lt;/blockquote>
&lt;p>렌더링 엔진의 역할은 요청받은 내용을 브라우저 화면에 나타내는 일이다. HTML, CSS JS 등의 파일을 브라우저가 화면에 표시할 수 있도록 변환하여 픽셀 단위로 나타낸다.&lt;/p>
&lt;h3 id="렌더링-엔진-동작과정">렌더링 엔진 동작과정&lt;/h3>
&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_2.png"
width="1662"
height="156"
srcset="https://codemario318.github.io/post/browser/browser_2_hu406920e404954aff15e13b48205cf14d_24026_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_2_hu406920e404954aff15e13b48205cf14d_24026_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="1065"
data-flex-basis="2556px"
>&lt;/p>
&lt;p>렌더링 엔진은 요청한 문서의 내용을 얻는 것에서 시작하며, 보통 8KB 단위로 전송된다.&lt;/p>
&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_3.png"
width="1552"
height="720"
srcset="https://codemario318.github.io/post/browser/browser_3_hu7a82da03cdc3a0ae81c82f3041913bc9_89857_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_3_hu7a82da03cdc3a0ae81c82f3041913bc9_89857_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="215"
data-flex-basis="517px"
>&lt;/p>
&lt;p>렌더링 엔진은 HTML 문서를 파싱하고 &lt;strong>콘텐츠 트리&lt;/strong> 내부에서 태그를 DOM 노드로 변환한다. 그 다음 외부 CSS 파일과 함께 포함된 스타일 요소도 파싱한다. 스타일 정보와 HTML 표시 규칙은 &lt;strong>렌더 트리&lt;/strong> 라고 부르는 또 다른 트리를 생성한다.&lt;/p>
&lt;h3 id="파싱">파싱&lt;/h3>
&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_4.png"
width="102"
height="300"
srcset="https://codemario318.github.io/post/browser/browser_4_hu91d876ef53778d3a5c87516f21f74e95_11053_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_4_hu91d876ef53778d3a5c87516f21f74e95_11053_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="34"
data-flex-basis="81px"
>&lt;/p>
&lt;p>문서를 통해 파싱트리를 만드는 과정&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>어휘분석: Tokenizer&lt;/strong>&lt;br>
문서를 읽어 정해놓은 규칙을 통해 토큰을 추출하는 도구, 과정을 의미한다.&lt;/p>
&lt;p>&lt;strong>Token&lt;/strong>: 의미적으로 더이상 나눌 수 없는 기본적인 언어 요소를 표현하는 데이터 단위&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>구문분석: Lexer&lt;/strong>&lt;br>
토큰에 약속된 의미를 부여하는 도구, 과정&lt;/p>
&lt;ul>
&lt;li>어휘분석과 구문분석의 결과물을 이용하여 파싱트리를 만드는 과정이다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="컴파일">컴파일&lt;/h3>
&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_5.png"
width="104"
height="400"
srcset="https://codemario318.github.io/post/browser/browser_5_huf902b62d6a6c145803bcee099d8f72a4_10886_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_5_huf902b62d6a6c145803bcee099d8f72a4_10886_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="26"
data-flex-basis="62px"
>&lt;/p>
&lt;p>파싱을 통해 만들어진 결과물을 기계 코드로 변환하는 과정이다&lt;/p>
&lt;h3 id="dom---문서-객체-모델-document-object-model">DOM - 문서 객체 모델: Document Object Model&lt;/h3>
&lt;p>HTML, XML 문서의 프로그래밍 인터페이스이다. HTML 문서의 객체 표현&lt;/p>
&lt;ul>
&lt;li>
&lt;p>문서의 구조화된 표현을 제공하며 프로그래밍 언어가 DOM 구조에 접근할 수 있는 방법을 제공하여 그들이 문서 구조, 스타일, 내용 등을 변경할 수 있게 돕는다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>nodes와 property와 method 를 갖고 있는 objects로 문서를 표현한다.
이들은 웹 페이지를 스크립트 또는 프로그래밍 언어들에서 사용될 수 있게 연결시켜주는 역할을 담당한다.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>동일한 문서를 표현, 저장, 조작하는 방법을 제공하는 웹 페이지의 객체 지향 표현&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_6.png"
width="703"
height="282"
srcset="https://codemario318.github.io/post/browser/browser_6_hu9ea121262f2ec390b47a8db05c241f26_18981_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_6_hu9ea121262f2ec390b47a8db05c241f26_18981_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="249"
data-flex-basis="598px"
>&lt;/p>
&lt;p>&lt;em>&lt;strong>따라서, DOM은 마크업과 1:1 관계를 맺는다.&lt;/strong>&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Hello World&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;example.png&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_7.png"
width="400"
height="218"
srcset="https://codemario318.github.io/post/browser/browser_7_hu56c14cf36eac091b824979e27d9b3cf1_24643_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_7_hu56c14cf36eac091b824979e27d9b3cf1_24643_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="183"
data-flex-basis="440px"
>&lt;/p>
&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_8.png"
width="1123"
height="622"
srcset="https://codemario318.github.io/post/browser/browser_8_hud2c45344c452a228625f98d3ee96b9d3_77984_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_8_hud2c45344c452a228625f98d3ee96b9d3_77984_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="433px"
>&lt;/p>
&lt;h3 id="cssomcss-object-model">CSSOM(CSS Object Model)&lt;/h3>
&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_9.png"
width="715"
height="152"
srcset="https://codemario318.github.io/post/browser/browser_9_hu3a781926f6d66d9782dc95abe9d5abc1_15248_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_9_hu3a781926f6d66d9782dc95abe9d5abc1_15248_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="470"
data-flex-basis="1128px"
>&lt;/p>
&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_10.png"
width="1012"
height="65"
srcset="https://codemario318.github.io/post/browser/browser_10_hu006314dbb0860838e7ffa9b60ae46a03_9328_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_10_hu006314dbb0860838e7ffa9b60ae46a03_9328_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="1556"
data-flex-basis="3736px"
>&lt;/p>
&lt;p>위의 그림과 같이 DOM을 생성하는 과정 그대로 CSSOM을 생성한다.&lt;/p>
&lt;ul>
&lt;li>브라우저는 DOM을 생성하는 동안 외부 CSS를 참조하는 &lt;code>&amp;lt;link&amp;gt;&lt;/code> 태그를 만나게 되면 브라우저에 리소스를 요청함.&lt;/li>
&lt;li>CSS의 원시 바이트가 문자열로 변환 된 후 차례로 토큰과 노드로 변환되고 마지막으로 CSSOM이라는 트리 구조를 만든다.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_11.png"
width="582"
height="299"
srcset="https://codemario318.github.io/post/browser/browser_11_huc6549cf8fd59f738b60b553e8f263051_33569_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_11_huc6549cf8fd59f738b60b553e8f263051_33569_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="194"
data-flex-basis="467px"
>&lt;/p>
&lt;p>CSSOM은 하향식으로 규칙을 적용하기 때문에 트리 구조를 가진다. 최종 스타일을 계산할 때 브라우저는 해당 노드에 적용 가능한 가장 일반적인 규칙으로 시작해 더 구체적인 규칙을 적용하는 방식으로 처리된다.&lt;/p>
&lt;blockquote>
&lt;p>DOM 트리를 바탕으로 CSSOM 트리를 만들기 때문에 해당 하는 스타일룰이 적용이 된 트리 형태로 구성되는 것 같다.&lt;/p>
&lt;/blockquote>
&lt;h2 id="어태치먼트-랜더링-트리-생성-과정">어태치먼트: 랜더링 트리 생성 과정&lt;/h2>
&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_12.png"
width="564"
height="449"
srcset="https://codemario318.github.io/post/browser/browser_12_hua932349974edb81dd6f801fc874977be_20415_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_12_hua932349974edb81dd6f801fc874977be_20415_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="125"
data-flex-basis="301px"
>&lt;/p>
&lt;p>DOM 트리와 CSSOM 트리를 결합하여, 표시해야 할 순서로 내용을 그려냏 수 있도록 하기 위해 렌더트리를 형성한다. 이 과정을 웹킷에서는 어테치먼트라고 한다.&lt;/p>
&lt;blockquote>
&lt;p>렌더트리는 화면에 표시되는 각 노드의 위치를 계산하는 레이아웃에 사용되고 픽셀을 하면에 그리는 페인트 과정에도 사용됨&lt;/p>
&lt;/blockquote>
&lt;h3 id="랜더-트리-생성-과정">랜더 트리 생성 과정&lt;/h3>
&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_13.png"
width="1150"
height="537"
srcset="https://codemario318.github.io/post/browser/browser_13_huacc82727614f2cd0f5f5fd4a4c0dd28b_85853_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_13_huacc82727614f2cd0f5f5fd4a4c0dd28b_85853_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="214"
data-flex-basis="513px"
>&lt;/p>
&lt;ol>
&lt;li>DOM 트리 구축을 위한 HTML 파싱
&lt;ul>
&lt;li>HTML 파싱 → DOM 트리 구축&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CSSOM 트리 구축을 위한 CSS 파싱
&lt;ul>
&lt;li>CSS → CSSOM 트리 생성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>DOM 트리와 CSSOM 트리를 활용하여 랜더 트리 구축
&lt;ul>
&lt;li>DOM Tree + CSSOM Tree = Rendering Tree&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="랜더링-트리-생성-과정-2">랜더링 트리 생성 과정 2&lt;/h3>
&lt;ol>
&lt;li>DOM 트리의 루트에서 시작하여 표시되는 노드 각각을 탐색함
&lt;ul>
&lt;li>스크립트 태그, 메타 태그 등 랜더링된 출력에 반영되지 않는 트리들이 생략됨&lt;/li>
&lt;li>CSS를 속성을 통해 숨겨지는 노드들이 생략됨
&lt;ul>
&lt;li>ex) &lt;code>display: none&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>표시된 각 노드에 대해 적절하게 일치하는 CSSOM 규칙을 찾아 적용&lt;/li>
&lt;li>표시된 노드를 콘텐츠 및 계산된 스타일과 함께 내보냄&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;code>visibility: hidden&lt;/code>은 비어 있는 상자로 렌더링되지만 &lt;code>display: none&lt;/code>은 랜더링에서 제외됨. 따라서 후자는 스크린 리더기에서 읽을 수 없음, 전자는 일부 스크린 리더기에서 인식하지 않기 때문에 접근성을 위한 IR 처리시 주의해야 한다.&lt;/p>
&lt;/blockquote>
&lt;p>최종 출력은 화면에 표시되는 모든 노드의 콘텐츠 및 스타일 정보를 포함하는 렌더링 트리&lt;/p>
&lt;h2 id="레이아웃">레이아웃&lt;/h2>
&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_14.png"
width="261"
height="283"
srcset="https://codemario318.github.io/post/browser/browser_14_hu65bac39c277f7017aabf58b2558f560a_7893_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_14_hu65bac39c277f7017aabf58b2558f560a_7893_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="92"
data-flex-basis="221px"
>&lt;/p>
&lt;p>렌더 트리가 생성되고, 기기의 뷰포트 내에서 렌더 트리의 노드가 정확한 위치와 크기를 계산하는 과정.&lt;/p>
&lt;p>모든 상대적인 측정값은 화면에서 절대적인 픽셀로 변환됨. 즉 CSS에 상대적인 값인 %로 할당된 값들은 절대적인 값인 PX 단위로 변환.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;width=device-width,initial-scale=1&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Critial Path: Hello world!&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;width: 50%&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">      &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;width: 50%&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Hello world!&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_15.png"
width="616"
height="281"
srcset="https://codemario318.github.io/post/browser/browser_15_hue179db7251d262ed94790fce3ce56a7d_11871_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_15_hue179db7251d262ed94790fce3ce56a7d_11871_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="219"
data-flex-basis="526px"
>&lt;/p>
&lt;blockquote>
&lt;p>뷰포트 내에서 각 요소의 정확한 위치와 크기를 정확하게 캡처하는 &lt;strong>상자 모델&lt;/strong>이 출력된다. 모든 상대적인 측정값은 화면에서 절대적인 픽셀로 변환된다.&lt;/p>
&lt;/blockquote>
&lt;h2 id="페인팅">페인팅&lt;/h2>
&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_16.png"
width="795"
height="126"
srcset="https://codemario318.github.io/post/browser/browser_16_huc39601fe59cffe979aaa54dccad9d914_13937_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_16_huc39601fe59cffe979aaa54dccad9d914_13937_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="630"
data-flex-basis="1514px"
>&lt;/p>
&lt;p>렌더링 트리의 각 노드를 화면의 실제 픽셀로 변환하는 마지막 단계로 이러한 정보를 전달할 수 있습니다.&lt;/p>
&lt;p>&lt;img src="https://codemario318.github.io/post/browser/browser_17.png"
width="766"
height="180"
srcset="https://codemario318.github.io/post/browser/browser_17_hu70edd254998be94c3f4cb5a6ee9754aa_24841_480x0_resize_box_3.png 480w, https://codemario318.github.io/post/browser/browser_17_hu70edd254998be94c3f4cb5a6ee9754aa_24841_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="425"
data-flex-basis="1021px"
>&lt;/p>
&lt;ul>
&lt;li>&amp;lsquo;Layout&amp;rsquo; 이벤트는 타임라인에서 렌더링 트리 생성, 위치 및 크기 계산을 캡처.&lt;/li>
&lt;li>레이아웃이 완료될 때 브라우저가 &lt;code>Paint Setup&lt;/code> 및 &lt;code>Paint&lt;/code> 이벤트를 발생.
&lt;ul>
&lt;li>이러한 작업은 렌더링 트리를 화면의 픽셀로 변환.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>렌더링 트리 생성, 레이아웃 및 페인트 작업을 수행하는 데 필요한 시간은 문서의 크기, 적용된 스타일 및 실행 중인 기기에 따라 달라진다.&lt;/p>
&lt;p>문서가 클수록 브라우저가 수행해야 하는 작업도 더 많아지며, 스타일이 복잡할수록 페인팅에 걸리는 시간도 늘어나게 된다.&lt;/p>
&lt;ul>
&lt;li>ex) 단색은 페인트하는 데 시간과 작업이 적게 필요한 반면, 그림자 효과는 계산하고 렌더링하는 데 시간과 작업이 더 필요하다.&lt;/li>
&lt;/ul>
&lt;h2 id="요약">요약&lt;/h2>
&lt;ol>
&lt;li>HTML 마크업을 처리하고 DOM 트리를 빌드 (DOM 파싱)&lt;/li>
&lt;li>CSS 마크업을 처리하고 CSSOM 트리를 빌드 (CSS 파싱)&lt;/li>
&lt;li>DOM 및 CSSOM을 결합하여 렌더 트리를 형성 (Attachment)&lt;/li>
&lt;li>렌더 트리에서 레이아웃을 실행하여 각 노드의 기하학적 형태를 계산 (Layout)&lt;/li>
&lt;li>개별 노드를 화면에 페인트(Painting)&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>참고 자료&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://developers.google.com/web/fundamentals/performance/critical-rendering-path?hl=ko" target="_blank" rel="noopener"
>https://developers.google.com/web/fundamentals/performance/critical-rendering-path?hl=ko&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://janghanboram.github.io/2018/06/06/browser-rendering/" target="_blank" rel="noopener"
>https://janghanboram.github.io/2018/06/06/browser-rendering/&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://d2.naver.com/helloworld/59361" target="_blank" rel="noopener"
>https://d2.naver.com/helloworld/59361&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://taligarsiel.com/Projects/howbrowserswork1.htm#Render_tree_construction" target="_blank" rel="noopener"
>http://taligarsiel.com/Projects/howbrowserswork1.htm#Render_tree_construction&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://grosskurth.ca/papers/browser-refarch.pdf" target="_blank" rel="noopener"
>https://grosskurth.ca/papers/browser-refarch.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://yilpe93.github.io/2018/06/18/etc/web-browser/" target="_blank" rel="noopener"
>https://yilpe93.github.io/2018/06/18/etc/web-browser/&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://sangbui.com/sb-files/BrowserArchitecture_ClientSide.pdf" target="_blank" rel="noopener"
>https://sangbui.com/sb-files/BrowserArchitecture_ClientSide.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://medium.com/@monica1109/how-does-web-browsers-work-c95ad628a509" target="_blank" rel="noopener"
>https://medium.com/@monica1109/how-does-web-browsers-work-c95ad628a509&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://blog.lgcns.com/1911" target="_blank" rel="noopener"
>https://blog.lgcns.com/1911&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://cisctbd.github.io/Report.pdf" target="_blank" rel="noopener"
>https://cisctbd.github.io/Report.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://blog.asamaru.net/2017/05/04/understanding-the-critical-rendering-path/" target="_blank" rel="noopener"
>https://blog.asamaru.net/2017/05/04/understanding-the-critical-rendering-path/&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>